@{
    Layout = "_LoginLayout";
}

@model CaseTransfer.Models.CaseTransferModel

<link href="~/css/1style.css" rel="stylesheet" />
<link rel="stylesheet" href="style.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

<link rel="alternate stylesheet" type="text/css" href="~/skins/green.css"
      title="green" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/blue.css"
      title="blue" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/orange.css"
      title="orange" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/lilac.css"
      title="lilac" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/yellow.css"
      title="yellow" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/teal.css"
      title="teal" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/pink.css"
      title="pink" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/red.css"
      title="red" />
<link rel="alternate stylesheet" type="text/css" href="~/skins/khaki.css"
      title="khaki" />


<style>
    .center {
        text-align: center;
    }

    h5 {
        font-weight: bold;
    }

    form .field {
        width: 100%;
        margin-bottom: 20px;
    }

        form .field.shake {
            animation: shake 0.3s ease-in-out;
        }

    @@keyframes shake {
        0%, 100% {
            margin-left: 0px;
        }

        20%, 80% {
            margin-left: -12px;
        }

        40%, 60% {
            margin-left: 12px;
        }
    }

    form input {
        width: 100%;
        height: 100%;
        outline: none;
        padding: 0 45px;
        font-size: 18px;
        background: none;
        caret-color: #5372F0;
        border-radius: 5px;
        border: 1px solid #bfbfbf;
        border-bottom-width: 2px;
        transition: all 0.2s ease;
    }

    form .field input:focus,
    form .field.valid input {
        border-color: #5372F0;
    }

    .error input, input.error, .error textarea, textarea.error {
        background-color: #fff;
        border: 0.5px solid red;
    }

    .field .input-area i {
        position: absolute;
        top: 50%;
        font-size: 18px;
        pointer-events: none;
        transform: translateY(-50%);
    }

    .input-area .icon {
        left: 15px;
        color: #bfbfbf;
        transition: color 0.2s ease;
    }

    .input-area .error-icon {
        right: 15px;
        color: #dc3545;
    }

    form input:focus ~ .icon,
    form .field.valid .icon {
        color: #5372F0;
    }

    form input::placeholder {
        color: #bfbfbf;
        font-size: 13px;
    }

    form .field .error-txt {
        color: #dc3545;
        text-align: left;
        margin-top: 5px;
    }

    form .field .error {
        display: none;
    }

        form .field.shake .error,
        form .field.error .error {
            display: block;
        }

    form .pass-txt {
        text-align: left;
        margin-top: -10px;
    }

    .wrapper a {
        color: #5372F0;
        text-decoration: none;
    }

        .wrapper a:hover {
            text-decoration: underline;
        }

    form input[type="submit"] {
        height: 50px;
        margin-top: 30px;
        color: #fff;
        padding: 0;
        background: #5372F0;
        cursor: pointer;
        border-bottom: 2px solid rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }

        form input[type="submit"]:hover {
            background: #2c52ed;
        }

</style>


<!-- CONTENT
================================================== -->
<div class="row minheight350">
    <div class="col-md-8 aligncenter">
        <div class="centersectiontitle">
            <h5>Associated Agency</h5>
        </div>
        <div class="row">
            @if (Model.objAgencyList != null)
            {
                @foreach (var item in Model.objAgencyList)
                {
                    <div class="col-md-4 noleftmargin">
                        <div class="teamwrap teambox">
                            <div class="columns centered">
                                <img src='data:image/png;base64,@item.AgencyLogo' alt='@item.AgencyName' />
                            </div>
                            <div class="mask">
                                <h2>@item.AgencyCode</h2>
                                <h3></h3>
                                <p class="wrapcontact" title='@item.AgencyDescription'>
                                    @item.AgencyDescription
                                </p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-md-4">

        <div class="row justify-content-center">
            <div class="col-sm-10">
                <h5>Sign in</h5>
                <form id="login-form">
                    @*method="post" asp-controller="Home" asp-action="Authenticate"*@
                    <div class="field email">
                        <div class="input-area">
                            <input type="text" placeholder="Username *" name="Username" id="Username" value="">
                        </div>
                        <div class="error error-txt">Username can't be blank</div>
                    </div>
                    <div class="field password">
                        <div class="input-area">
                            <input type="password" placeholder="Password *" name="Password" id="Password" value="">
                        </div>
                        <div class="error error-txt">Password can't be blank</div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn twelve readmore" value="Login">Login</button>
                    </div>
                    <div class="form-group mt-3">
                        <a href="#" id="A1" onclick="ShowPanel(false);" class="float-right mt-2 handcursor">Forgot password?</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="clearfix">
    &nbsp;
</div>

<!-- BEGIN: Toaster Refrences -->
<link href="~/assets/plugins/toastr/toastr.css" rel="stylesheet" />
<script src="~/assets/plugins/toastr/toastr.min.js"></script>
<!-- END: Toaster Refrences -->

<script type="text/javascript" language="javascript">
    $(document).ready(function () {

        $('input[type="text"],input[type="password"],input[type="date"],input[type="datetime"],input[type="email"],input[type="number"],input[type="search"],input[type="tel"],input[type="time"],input[type="url"],textarea,input[type="select"]').addClass('langDirectionltr');

    });

    const form = document.querySelector("form");
    eField = form.querySelector(".email"),
        eInput = eField.querySelector("input"),
        pField = form.querySelector(".password"),
        pInput = pField.querySelector("input");
    form.onsubmit = (e) => {
        e.preventDefault(); // preventing form submitting
        // if email and password are blank then add shake class in it else call specified function
        (eInput.value == "") ? eField.classList.add("shake", "error") : checkEmail();
        (pInput.value == "") ? pField.classList.add("shake", "error") : checkPass();
        setTimeout(() => { // remove shake class after 500ms
            eField.classList.remove("shake");
            pField.classList.remove("shake");
        }, 500);
        eInput.onkeyup = () => { checkEmail(); } // calling checkEmail function on email input keyup
        pInput.onkeyup = () => { checkPass(); } // calling checkPassword function on pass input keyup

        function checkEmail() { // checkEmail function
            let pattern = /^[^ ]+@@[^ ]+\.[a-z]{2,3}$/; // pattern for validating email
            if (!eInput.value.match(pattern)) { // if pattern not matched then add error and remove valid class
                eField.classList.add("error");
                eField.classList.remove("valid");
                let errorTxt = eField.querySelector(".error-txt");
                // if email value is not empty then show please enter a valid email else show Email can't be blank
                (eInput.value != "") ? errorTxt.innerText = "Enter a valid email address" : errorTxt.innerText = "Email can't be blank";
            } else { // if pattern matched then remove error and add valid class
                eField.classList.remove("error");
                eField.classList.add("valid");
            }
        }

        function checkPass() { // checkPass function
            if (pInput.value == "") { // if pass is empty then add error and remove valid class
                pField.classList.add("error");
                pField.classList.remove("valid");
            } else { // if pass is empty then remove error and add valid class
                pField.classList.remove("error");
                pField.classList.add("valid");
            }
        }

        // if eField and pField don't contain the error class, that means the user filled in details properly
        if (!eField.classList.contains("error") && !pField.classList.contains("error")) {
            // Call your server-side authentication here
            authenticateUser();
        }
    }

    function authenticateUser() {
        // Your AJAX call to authenticate the user
        $.ajax({
            url: '/Home/Authenticate', // controller URL
            type: 'POST',
            data: {
                username: $('#Username').val(),
                password: $('#Password').val()
            },
            success: function (data) {
                console.log(data);
                if (data.statusCode == MessageCode.Success) {
                    window.location.href = '/Dashboard/AdminDashboard';
                } else if (data.statusCode == MessageCode.Referred) {
                    window.location.href = '/Home/Index';
                } else if (data.statusCode == MessageCode.PreconditionFailed) {
                    ShowToastr(ToastrMessage.LoginrFailed, ToasterMessagePageName.Login, ToastrType.error);
                    window.location.href = '/Home/Index';
                } else {
                    ShowToastr(data.statusMessage, ToasterMessagePageName.Login, ToastrType.error);
                    window.location.href = '/Home/Index';
                }
            },
            error: function (err) {
                if (err != null && err != '') {
                    var Response = JSON.parse(err.responseText);
                    if (Response != null && Response != '' && Response.statusMessage != null && Response.statusMessage != '') {
                        ShowToastr(Response.statusMessage, ToasterMessagePageName.Login, ToastrType.error);
                    } else {
                        ShowToastr(ToastrMessage.LoginrFailed, ToasterMessagePageName.Login, ToastrType.error);
                    }
                } else {
                    ShowToastr(ToastrMessage.LoginrFailed, ToasterMessagePageName.Login, ToastrType.error);
                }
            }
        });
    }

</script>
